namespace OldBit.Spectron.Disassembly.Instructions;

internal static class IndexRegisterInstructions
{
    internal static Dictionary<int, InstructionTemplate> Index { get; } = new()
    {
        { 0x09, new InstructionTemplate("ADD <xy>,BC") },
        { 0x19, new InstructionTemplate("ADD <xy>,DE") },
        { 0x21, new InstructionTemplate("LD <xy>,<nn>") },
        { 0x22, new InstructionTemplate("LD (<nn>),<xy>") },
        { 0x23, new InstructionTemplate("INC <xy>") },
        { 0x24, new InstructionTemplate("INC <xy>H", IsUndocumented: true) },
        { 0x25, new InstructionTemplate("DEC <xy>H", IsUndocumented: true) },
        { 0x26, new InstructionTemplate("LD <xy>H,<n>", IsUndocumented: true) },
        { 0x29, new InstructionTemplate("ADD <xy>,<xy>") },
        { 0x2A, new InstructionTemplate("LD <xy>,(<nn>)") },
        { 0x2B, new InstructionTemplate("DEC <xy>") },
        { 0x2C, new InstructionTemplate("INC <xy>L", IsUndocumented: true) },
        { 0x2D, new InstructionTemplate("DEC <xy>L", IsUndocumented: true) },
        { 0x2E, new InstructionTemplate("LD <xy>L,<n>", IsUndocumented: true) },
        { 0x34, new InstructionTemplate("INC (<xy><d>)") },
        { 0x35, new InstructionTemplate("DEC (<xy><d>)") },
        { 0x36, new InstructionTemplate("LD (<xy><d>),<n>") },
        { 0x39, new InstructionTemplate("ADD <xy>,SP") },
        { 0x44, new InstructionTemplate("LD B,<xy>H", IsUndocumented: true) },
        { 0x45, new InstructionTemplate("LD B,<xy>L", IsUndocumented: true) },
        { 0x46, new InstructionTemplate("LD B,(<xy><d>)") },
        { 0x4C, new InstructionTemplate("LD C,<xy>H", IsUndocumented: true) },
        { 0x4D, new InstructionTemplate("LD C,<xy>L", IsUndocumented: true) },
        { 0x4E, new InstructionTemplate("LD C,(<xy><d>)") },
        { 0x54, new InstructionTemplate("LD D,<xy>H", IsUndocumented: true) },
        { 0x55, new InstructionTemplate("LD D,<xy>L", IsUndocumented: true) },
        { 0x56, new InstructionTemplate("LD D,(<xy><d>)") },
        { 0x5C, new InstructionTemplate("LD E,<xy>H", IsUndocumented: true) },
        { 0x5D, new InstructionTemplate("LD E,<xy>L", IsUndocumented: true) },
        { 0x5E, new InstructionTemplate("LD E,(<xy><d>)") },
        { 0x60, new InstructionTemplate("LD <xy>H,B", IsUndocumented: true) },
        { 0x61, new InstructionTemplate("LD <xy>H,C", IsUndocumented: true) },
        { 0x62, new InstructionTemplate("LD <xy>H,D", IsUndocumented: true) },
        { 0x63, new InstructionTemplate("LD <xy>H,E", IsUndocumented: true) },
        { 0x64, new InstructionTemplate("LD <xy>H,<xy>H", IsUndocumented: true) },
        { 0x65, new InstructionTemplate("LD <xy>H,<xy>L", IsUndocumented: true) },
        { 0x66, new InstructionTemplate("LD H,(<xy><d>)") },
        { 0x67, new InstructionTemplate("LD <xy>H,A", IsUndocumented: true) },
        { 0x68, new InstructionTemplate("LD <xy>L,B", IsUndocumented: true) },
        { 0x69, new InstructionTemplate("LD <xy>L,C", IsUndocumented: true) },
        { 0x6A, new InstructionTemplate("LD <xy>L,D", IsUndocumented: true) },
        { 0x6B, new InstructionTemplate("LD <xy>L,E", IsUndocumented: true) },
        { 0x6C, new InstructionTemplate("LD <xy>L,<xy>H", IsUndocumented: true) },
        { 0x6D, new InstructionTemplate("LD <xy>L,<xy>L", IsUndocumented: true) },
        { 0x6E, new InstructionTemplate("LD L,(<xy><d>)") },
        { 0x6F, new InstructionTemplate("LD <xy>L,A", IsUndocumented: true) },
        { 0x70, new InstructionTemplate("LD (<xy><d>),B") },
        { 0x71, new InstructionTemplate("LD (<xy><d>),C") },
        { 0x72, new InstructionTemplate("LD (<xy><d>),D") },
        { 0x73, new InstructionTemplate("LD (<xy><d>),E") },
        { 0x74, new InstructionTemplate("LD (<xy><d>),H") },
        { 0x75, new InstructionTemplate("LD (<xy><d>),L") },
        { 0x77, new InstructionTemplate("LD (<xy><d>),A") },
        { 0x7C, new InstructionTemplate("LD A,<xy>H", IsUndocumented: true) },
        { 0x7D, new InstructionTemplate("LD A,<xy>L", IsUndocumented: true) },
        { 0x7E, new InstructionTemplate("LD A,(<xy><d>)") },
        { 0x84, new InstructionTemplate("ADD A,<xy>H", IsUndocumented: true) },
        { 0x85, new InstructionTemplate("ADD A,<xy>L", IsUndocumented: true) },
        { 0x86, new InstructionTemplate("ADD A,(<xy><d>)") },
        { 0x8C, new InstructionTemplate("ADC A,<xy>H", IsUndocumented: true) },
        { 0x8D, new InstructionTemplate("ADC A,<xy>L", IsUndocumented: true) },
        { 0x8E, new InstructionTemplate("ADC A,(<xy><d>)") },
        { 0x94, new InstructionTemplate("SUB <xy>H", IsUndocumented: true) },
        { 0x95, new InstructionTemplate("SUB <xy>L", IsUndocumented: true) },
        { 0x96, new InstructionTemplate("SUB (<xy><d>)") },
        { 0x9C, new InstructionTemplate("SBC A,<xy>H", IsUndocumented: true) },
        { 0x9D, new InstructionTemplate("SBC A,<xy>L", IsUndocumented: true) },
        { 0x9E, new InstructionTemplate("SBC A,(<xy><d>)") },
        { 0xA4, new InstructionTemplate("AND <xy>H", IsUndocumented: true) },
        { 0xA5, new InstructionTemplate("AND <xy>L", IsUndocumented: true) },
        { 0xA6, new InstructionTemplate("AND (<xy><d>)") },
        { 0xAC, new InstructionTemplate("XOR <xy>H", IsUndocumented: true) },
        { 0xAD, new InstructionTemplate("XOR <xy>L", IsUndocumented: true) },
        { 0xAE, new InstructionTemplate("XOR (<xy><d>)") },
        { 0xB4, new InstructionTemplate("OR <xy>H", IsUndocumented: true) },
        { 0xB5, new InstructionTemplate("OR <xy>L", IsUndocumented: true) },
        { 0xB6, new InstructionTemplate("OR (<xy><d>)") },
        { 0xBC, new InstructionTemplate("CP <xy>H", IsUndocumented: true) },
        { 0xBD, new InstructionTemplate("CP <xy>L", IsUndocumented: true) },
        { 0xBE, new InstructionTemplate("CP (<xy><d>)") },
        { 0xE1, new InstructionTemplate("POP <xy>") },
        { 0xE3, new InstructionTemplate("EX (SP),<xy>") },
        { 0xE5, new InstructionTemplate("PUSH <xy>") },
        { 0xE9, new InstructionTemplate("JP (<xy>)") },
        { 0xF9, new InstructionTemplate("LD SP,<xy>") },
    };
}