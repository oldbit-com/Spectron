<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:viewModels="clr-namespace:OldBit.Spectron.ViewModels"
             x:DataType="viewModels:MainWindowViewModel"
             xmlns:material="clr-namespace:Material.Icons.Avalonia;assembly=Material.Icons.Avalonia"
             xmlns:icons="clr-namespace:Material.Icons;assembly=Material.Icons"
             xmlns:converters="clr-namespace:OldBit.Spectron.Converters"
             mc:Ignorable="d" d:DesignWidth="30" d:DesignHeight="400"
             x:Class="OldBit.Spectron.Controls.MainToolbar">

    <UserControl.Resources>
        <converters:ValueEqualityConverter x:Key="ValueEqualityConverter"/>
    </UserControl.Resources>

    <UserControl.Styles>
        <Style Selector="Button">
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Width" Value="30"/>
            <Setter Property="Background" Value="{DynamicResource SystemAltLowColor}"/>
        </Style>
        <Style Selector="ToggleButton">
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Width" Value="30"/>
            <Setter Property="Background" Value="{DynamicResource SystemAltLowColor}"/>
        </Style>
        <Style Selector="Path">
            <Setter Property="Fill" Value="{DynamicResource ButtonForeground}"/>
        </Style>
        <Style Selector="material|MaterialIcon">
            <Setter Property="Width" Value="20"/>
            <Setter Property="Height" Value="20"/>
            <Setter Property="Foreground" Value="{DynamicResource SystemBaseMediumLowColor}"/>
        </Style>
    </UserControl.Styles>

    <StackPanel>
        <Button
            ToolTip.Tip="Load File"
            HotKey="Cmd+O"
            Command="{Binding LoadFileCommand}">
            <material:MaterialIcon Kind="Import"/>
        </Button>

        <Button
            ToolTip.Tip="Save Snapshot"
            HotKey="Cmd+S"
            Command="{Binding SaveFileCommand}">
            <material:MaterialIcon Kind="Floppy"/>
        </Button>

        <Button
            ToolTip.Tip="Quick Save"
            HotKey="F5"
            Command="{Binding QuickSaveCommand}">
            <material:MaterialIcon Kind="TransferLeft"/>
        </Button>

        <Button
            ToolTip.Tip="Quick Load"
            Margin="0 0 20 0"
            HotKey="F6"
            Command="{Binding QuickLoadCommand}">
            <material:MaterialIcon Kind="TransferRight"/>
        </Button>

        <Button
            ToolTip.Tip="Start Video Record"
            IsVisible="{Binding !RecordingStatus}"
            Command="{Binding StartVideoRecordingCommand}">
            <material:MaterialIcon Kind="Record" Foreground="Red"/>
        </Button>

        <Button
            ToolTip.Tip="Stop Recording"
            IsVisible="{Binding RecordingStatus}"
            Command="{Binding StopRecordingCommand}">
            <material:MaterialIcon Kind="Stop" Foreground="Red"/>
        </Button>

        <ToggleButton
            ToolTip.Tip="Pause"
            Margin="0 20 0 0"
            Name="PauseButton"
            HotKey="F2"
            IsChecked="{Binding IsPaused, Mode=OneWay}"
            Command="{Binding TogglePauseCommand}">
            <material:MaterialIcon Kind="Pause"/>

            <Interaction.Behaviors>
                <DataTriggerBehavior Binding="{Binding $parent[ToggleButton].IsChecked}" Value="{x:True}">
                    <ChangePropertyAction TargetObject="PauseButton" PropertyName="ToolTip.Tip" Value="Resume"/>
                </DataTriggerBehavior>
                <DataTriggerBehavior Binding="{Binding $parent[ToggleButton].IsChecked}" Value="{x:False}">
                    <ChangePropertyAction TargetObject="PauseButton" PropertyName="ToolTip.Tip" Value="Pause"/>
                </DataTriggerBehavior>
            </Interaction.Behaviors>
        </ToggleButton>

        <ToggleButton
            Name="VolumeButton"
            ToolTip.Tip="Mute"
            IsChecked="{Binding IsMuted, Mode=OneWay}"
            Command="{Binding ToggleMuteCommand}">

            <Interaction.Behaviors>
                <DataTriggerBehavior Binding="{Binding $parent[ToggleButton].IsChecked}" Value="{x:True}">
                    <ChangePropertyAction TargetObject="VolumeIcon" PropertyName="Kind" Value="{x:Static icons:MaterialIconKind.VolumeOff}"/>
                    <ChangePropertyAction TargetObject="VolumeButton" PropertyName="ToolTip.Tip" Value="Unmute"/>
                </DataTriggerBehavior>
                <DataTriggerBehavior Binding="{Binding $parent[ToggleButton].IsChecked}" Value="{x:False}">
                    <ChangePropertyAction TargetObject="VolumeIcon" PropertyName="Kind" Value="{x:Static icons:MaterialIconKind.VolumeHigh}"/>
                    <ChangePropertyAction TargetObject="VolumeButton" PropertyName="ToolTip.Tip" Value="Mute"/>
                </DataTriggerBehavior>
            </Interaction.Behaviors>

            <material:MaterialIcon Name="VolumeIcon" Kind="VolumeHigh"/>
        </ToggleButton>

        <Button
            ToolTip.Tip="Time Machine"
            HotKey="F3"
            Command="{Binding ShowTimeMachineViewCommand}">
            <material:MaterialIcon Kind="ClockTimeTenOutline"/>
        </Button>

        <Button
            ToolTip.Tip="Debugger"
            HotKey="F11"
            Command="{Binding ShowDebuggerViewCommand}">
            <material:MaterialIcon Kind="Bug"/>
        </Button>

        <ToggleButton
            ToolTip.Tip="Toggle Full Screen"
            IsChecked="{Binding $parent[Window].WindowState, Converter={StaticResource ValueEqualityConverter}, ConverterParameter={x:Static WindowState.FullScreen}}"
            HotKey="Ctrl+Enter"
            Margin="0,10,0,0"
            Command="{Binding ToggleFullScreenCommand}">
            <material:MaterialIcon Kind="Fullscreen"/>
        </ToggleButton>

        <Button
            ToolTip.Tip="Preferences"
            HotKey="Cmd+,"
            Margin="0,10,0,0"
            Command="{Binding ShowPreferencesViewCommand}">
            <material:MaterialIcon Kind="Settings"/>
        </Button>

    </StackPanel>
</UserControl>
