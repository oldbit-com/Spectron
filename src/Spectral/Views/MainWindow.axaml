<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:viewModels="clr-namespace:OldBit.Spectral.ViewModels"
        xmlns:converters="clr-namespace:OldBit.Spectral.Converters"
        xmlns:models="clr-namespace:OldBit.Spectral.Models"
        xmlns:rom="clr-namespace:OldBit.Spectral.Emulation.Rom;assembly=OldBit.Spectral.Emulation"
        xmlns:computer="clr-namespace:OldBit.Spectral.Emulation.Computers;assembly=OldBit.Spectral.Emulation"
        xmlns:controls="clr-namespace:OldBit.Spectral.Controls"
        xmlns:i="clr-namespace:Avalonia.Xaml.Interactivity;assembly=Avalonia.Xaml.Interactivity"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
        x:Class="OldBit.Spectral.Views.MainWindow"
        x:DataType="viewModels:MainWindowViewModel"
        Icon="/Assets/spectral.ico"
        Title="Spectral - ZX Spectrum Emulator"
        Name="Window">

    <Design.DataContext>
        <viewModels:MainWindowViewModel/>
    </Design.DataContext>

    <i:Interaction.Behaviors>
        <EventTriggerBehavior EventName="Opened" SourceObject="Window">
            <InvokeCommandAction Command="{Binding WindowOpenedCommand}" />
        </EventTriggerBehavior>
        <EventTriggerBehavior EventName="Closing" SourceObject="Window">
            <InvokeCommandAction Command="{Binding WindowClosingCommand}"/>
        </EventTriggerBehavior>
        <EventTriggerBehavior EventName="KeyDown" SourceObject="Window">
            <InvokeCommandAction Command="{Binding KeyDownCommand}" PassEventArgsToCommand="True"/>
        </EventTriggerBehavior>
        <EventTriggerBehavior EventName="KeyUp" SourceObject="Window">
            <InvokeCommandAction Command="{Binding KeyUpCommand}" PassEventArgsToCommand="True"/>
        </EventTriggerBehavior>
    </i:Interaction.Behaviors>

    <Window.Resources>
        <converters:SelectedEnumToBooleanConverter x:Key="SelectedEnumToBooleanConverter"/>
    </Window.Resources>

    <NativeMenu.Menu>
        <NativeMenu>
            <NativeMenuItem Header="File">
                <NativeMenu>
                    <NativeMenuItem Header="Open..." Gesture="Cmd+O" Command="{Binding OpenFileCommand}"/>
                    <!-- <NativeMenuItem Header="Open Recent"> -->
                    <!--     <NativeMenu NeedsUpdate="OpenRecent_OnNeedsUpdate" /> -->
                    <!-- </NativeMenuItem> -->
                </NativeMenu>
            </NativeMenuItem>
            <NativeMenuItem Header="Machine">
                <NativeMenu>
                    <NativeMenuItem Header="Machine">
                        <NativeMenu>
                            <NativeMenuItem Header="ZX Spectrum 16" ToggleType="CheckBox" Command="{Binding ChangeComputerType}" CommandParameter="{x:Static computer:ComputerType.Spectrum16K}" IsChecked="{Binding ComputerType, Converter={StaticResource SelectedEnumToBooleanConverter}, ConverterParameter={x:Static computer:ComputerType.Spectrum16K}}"/>
                            <NativeMenuItem Header="ZX Spectrum 48" ToggleType="CheckBox" Command="{Binding ChangeComputerType}" CommandParameter="{x:Static computer:ComputerType.Spectrum48K}" IsChecked="{Binding ComputerType, Converter={StaticResource SelectedEnumToBooleanConverter}, ConverterParameter={x:Static computer:ComputerType.Spectrum48K}}"/>
                            <NativeMenuItem Header="ZX Spectrum 128" ToggleType="CheckBox" Command="{Binding ChangeComputerType}" CommandParameter="{x:Static computer:ComputerType.Spectrum128K}" IsChecked="{Binding ComputerType, Converter={StaticResource SelectedEnumToBooleanConverter}, ConverterParameter={x:Static computer:ComputerType.Spectrum128K}}"/>
                        </NativeMenu>
                    </NativeMenuItem>
                    <NativeMenuItem Header="ROM">
                        <NativeMenu>
                            <NativeMenuItem Header="Original" ToggleType="CheckBox" Command="{Binding ChangeRomCommand}" CommandParameter="{x:Static rom:RomType.Original}" IsChecked="{Binding RomType, Converter={StaticResource SelectedEnumToBooleanConverter}, ConverterParameter={x:Static rom:RomType.Original}}"/>
                            <NativeMenuItem Header="Gosh Wonderful" ToggleType="CheckBox" Command="{Binding ChangeRomCommand}" CommandParameter="{x:Static rom:RomType.GoshWonderful}" IsChecked="{Binding RomType, Converter={StaticResource SelectedEnumToBooleanConverter}, ConverterParameter={x:Static rom:RomType.GoshWonderful}}"/>
                            <NativeMenuItem Header="Busy Soft v1.40" ToggleType="CheckBox" Command="{Binding ChangeRomCommand}" CommandParameter="{x:Static rom:RomType.BusySoft}" IsChecked="{Binding RomType, Converter={StaticResource SelectedEnumToBooleanConverter}, ConverterParameter={x:Static rom:RomType.BusySoft}}"/>
                            <NativeMenuItem Header="J.G. Harston v0.77" ToggleType="CheckBox" Command="{Binding ChangeRomCommand}" CommandParameter="{x:Static rom:RomType.Harston}" IsChecked="{Binding RomType, Converter={StaticResource SelectedEnumToBooleanConverter}, ConverterParameter={x:Static rom:RomType.Harston}}"/>
                            <NativeMenuItem Header="Diagnostics">
                                <NativeMenu>
                                    <NativeMenuItem Header="Retroleum v1.71" ToggleType="CheckBox" Command="{Binding ChangeRomCommand}" CommandParameter="{x:Static rom:RomType.Retroleum}" IsChecked="{Binding RomType, Converter={StaticResource SelectedEnumToBooleanConverter}, ConverterParameter={x:Static rom:RomType.Retroleum}}"/>
                                    <NativeMenuItem Header="B. Alford v1.37" ToggleType="CheckBox" Command="{Binding ChangeRomCommand}" CommandParameter="{x:Static rom:RomType.BrendanAlford}" IsChecked="{Binding RomType, Converter={StaticResource SelectedEnumToBooleanConverter}, ConverterParameter={x:Static rom:RomType.BrendanAlford}}"/>
                                </NativeMenu>
                            </NativeMenuItem>
                        </NativeMenu>
                    </NativeMenuItem>
                    <NativeMenuItem Header="Enable ULA+" ToggleType="CheckBox" Command="{Binding ToggleUlaPlus}" IsChecked="{Binding IsUlaPlusEnabled}"/>
                    <NativeMenuItemSeparator/>
                    <NativeMenuItem Header="Pause" Gesture="F11" Command="{Binding PauseCommand}" ToggleType="CheckBox" IsChecked="{Binding IsPaused}"/>
                    <NativeMenuItem Header="Reset" Command="{Binding ResetCommand}"/>
                </NativeMenu>
            </NativeMenuItem>
            <NativeMenuItem Header="View">
                <NativeMenu>
                    <NativeMenuItem Header="Border">
                        <NativeMenu>
                            <NativeMenuItem Header="None" ToggleType="CheckBox" Command="{Binding ChangeBorderSizeCommand}" CommandParameter="{x:Static models:BorderSize.None}" IsChecked="{Binding BorderSize, Converter={StaticResource SelectedEnumToBooleanConverter}, ConverterParameter={x:Static models:BorderSize.None}}"/>
                            <NativeMenuItem Header="Small" ToggleType="CheckBox" Command="{Binding ChangeBorderSizeCommand}" CommandParameter="{x:Static models:BorderSize.Small}" IsChecked="{Binding BorderSize, Converter={StaticResource SelectedEnumToBooleanConverter}, ConverterParameter={x:Static models:BorderSize.Small}}"/>
                            <NativeMenuItem Header="Medium" ToggleType="CheckBox" Command="{Binding ChangeBorderSizeCommand}" CommandParameter="{x:Static models:BorderSize.Medium}" IsChecked="{Binding BorderSize, Converter={StaticResource SelectedEnumToBooleanConverter}, ConverterParameter={x:Static models:BorderSize.Medium}}"/>
                            <NativeMenuItem Header="Large" ToggleType="CheckBox" Command="{Binding ChangeBorderSizeCommand}" CommandParameter="{x:Static models:BorderSize.Large}" IsChecked="{Binding BorderSize, Converter={StaticResource SelectedEnumToBooleanConverter}, ConverterParameter={x:Static models:BorderSize.Large}}"/>
                            <NativeMenuItem Header="Full" ToggleType="CheckBox" Command="{Binding ChangeBorderSizeCommand}" CommandParameter="{x:Static models:BorderSize.Full}" IsChecked="{Binding BorderSize, Converter={StaticResource SelectedEnumToBooleanConverter}, ConverterParameter={x:Static models:BorderSize.Full}}"/>
                        </NativeMenu>
                    </NativeMenuItem>
                </NativeMenu>
            </NativeMenuItem>
            <NativeMenuItem Header="Tape">
                <NativeMenu>
                    <NativeMenuItem Header="Insert..." Gesture="Cmd+T" Command="{Binding TapeMenuViewModel.InsertCommand}"/>
                    <NativeMenuItem Header="Play" Command="{Binding TapeMenuViewModel.PlayCommand}"/>
                    <NativeMenuItem Header="Stop" Command="{Binding TapeMenuViewModel.StopCommand}"/>
                    <NativeMenuItem Header="Rewind" Command="{Binding TapeMenuViewModel.RewindCommand}"/>
                    <NativeMenuItem Header="Eject" Command="{Binding TapeMenuViewModel.EjectCommand}"/>
                </NativeMenu>
            </NativeMenuItem>
        </NativeMenu>
    </NativeMenu.Menu>

    <Grid RowDefinitions="*,30">
        <Panel>
            <Border Background="Brown" Padding="4">
                <Grid>
                    <Image x:Name="ScreenImage" Source="{Binding SpectrumScreen}"/>
                    <controls:PausedOverlay FontSize="80" HorizontalAlignment="Center" VerticalAlignment="Center" IsVisible="{Binding IsPaused}"/>
                </Grid>
            </Border>
        </Panel>
        <controls:StatusBar DataContext="{Binding StatusBar}" Grid.Row="1" />
    </Grid>

</Window>